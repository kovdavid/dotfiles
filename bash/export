if [ -n "$TMUX" ] ; then
   export TERM=screen-256color
else
   export TERM=xterm-256color
fi

[[ -e $XDG_RUNTIME_DIR/gcr/ssh ]] && export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh

export WINEARCH=win32
[[ -d /opt/wine ]] && export WINEPREFIX=/opt/wine

export MYSQL_PS1="\u@`hostname` [\d]> "

# export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true"
export SDKMAN_DIR=/opt/sdkman

if [ -f /opt/javascript/completion-for-pnpm.bash ] ; then
    source /opt/javascript/completion-for-pnpm.bash
else
    if [[ -n "$(which pnpm 2>/dev/null)" && -d /opt/javascript ]] ; then
        pnpm completion bash > /opt/javascript/completion-for-pnpm.bash
        source /opt/javascript/completion-for-pnpm.bash
    fi
fi

if [ -f /opt/javascript/completion-for-fnm.bash ] ; then
    source /opt/javascript/completion-for-fnm.bash
else
    if [[ -n "$(which fnm 2>/dev/null)" && -d /opt/javascript ]] ; then
        fnm completions --shell bash > /opt/javascript/completion-for-fnm.bash
        source /opt/javascript/completion-for-fnm.bash
    fi
fi

[[ -d "$HOME/.meteor" ]] && export PATH="$HOME/.meteor:$PATH"

export PATH="$HOME/bin:$JAVA_HOME:$PATH"
[[ -d /opt/javascript/node ]] && export NODE_PATH="/opt/javascript/node"
[[ -d /opt/javascript/node/bin ]] && export PATH="/opt/javascript/node/bin:$PATH"
[[ -d /opt/rust/rustup ]] && export RUSTUP_HOME="/opt/rust/rustup"
[[ -d /opt/rust/cargo ]] && export CARGO_HOME="/opt/rust/cargo"
[[ -d ~/.cargo/bin ]] && export PATH="~/.cargo/bin:$PATH"
[[ -d ~/.yarn/bin ]] && export PATH="~/.yarn/bin:$PATH"
[[ -d ~/.local/bin ]] && export PATH="~/.local/bin:$PATH"
[[ -d /opt/rust/cargo/bin ]] && export PATH="/opt/rust/cargo/bin:$PATH"
[[ -n "$(which rustc 2>/dev/null)" && -d "$(rustc --print sysroot)/lib/rustlib/src/rust/src" ]] && \
    export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
export RUST_BACKTRACE=0

if [ -d /opt/go ] ; then
    export GOPATH="/opt/go"
    export PATH="$GOPATH/bin:$PATH"
fi

if [ -d /opt/javascript/npm-packages ] ; then
    export NPM_PACKAGES="/opt/javascript/npm-packages"
    export PATH="$NPM_PACKAGES/bin:$PATH"
    export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
    export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
fi

export NODE_OPTIONS="--max-old-space-size=4096"

if [ -d /opt/javascript/nvm ] ; then
    export NVM_DIR="/opt/javascript/nvm"
fi

export GOPROXY=direct
export GO111MODULE=on

export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'

[[ -n "$(which direnv 2>/dev/null)" ]] && eval "$(direnv hook bash)"
[[ -n "$(which fnm 2>/dev/null)" ]] && eval "$(fnm env --use-on-cd --version-file-strategy=recursive --fnm-dir=/opt/javascript/fnm --log-level=quiet --shell bash)"

[[ -f /opt/homebrew/bin/brew ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
export BASH_SILENCE_DEPRECATION_WARNING=1

export EDITOR=nvim

export HISTCONTROL=ignoreboth

export LANG="en_US.UTF-8"
export LC_COLLATE=C
export LC_CTYPE="sk_SK.UTF-8"
export LC_TIME="sk_SK.UTF-8"

export HISTSIZE=-1
export HISTFILESIZE=-1

# Docker build = show stdout output
export BUILDKIT_PROGRESS=plain

export GIT_EDITOR='nvim +startinsert!'
