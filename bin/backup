#!/bin/bash
# --filter=":- .gitignore" \

set -e

RSYNC="rsync --archive --acls --xattrs --verbose --compress --delete"
RSYNC="$RSYNC --exclude-from=/home/davs/dotfiles/rsync_ignore"
RSYNC="$RSYNC --exclude=/backup"

if [ $# -eq 1 ] ; then
    FSCK=0
    DEVICE=$1
elif [ $# -eq 2 ] && [ "$1" == "-f" ] ; then
    FSCK=1
    DEVICE=$2
else
    echo "Usage: `basename $0` [-f] <device>"
    exit 1
fi

if [[ $DEVICE == /* ]] ; then
    if [ ! -f $DEVICE ] ; then
        echo "$DEVICE does not exist"
        exit 1
    fi
else
    DEVICE="/dev/$DEVICE"
    if [ ! -e $DEVICE ] ; then
        echo "$DEVICE does not exist, partprobing ${DEVICE::-1}"
        partprobe ${DEVICE::-1}
        if [ ! -e $DEVICE ] ; then
            echo "$DEVICE does not exist after partprobe"
            exit 1
        fi
    fi
fi

CRYPTSETUP=$(which cryptsetup)
if [ -z "$CRYPTSETUP" ] ; then
    echo "cryptsetup not found"
    exit
fi

BACKUP_KEYFILE=${BACKUP_KEYFILE:-/root/keyfile}

if [ -z "$BACKUP_KEYFILE" ] || [ ! -f "$BACKUP_KEYFILE" ] ; then
    echo "No backup keyfile found"
    exit
fi

$CRYPTSETUP luksOpen $DEVICE backup --key-file "$BACKUP_KEYFILE"
if [ ! -e /dev/mapper/backup ] ; then
    echo "/dev/mapper/backup does not exist"
    exit 1
fi
echo "/dev/mapper/backup created..."

if [ -d /backup ] ; then
    echo "WARNING! /backup existed!"
    rm -rf /backup
fi
mkdir /backup
echo "/backup created..."

mount /dev/mapper/backup /backup
echo "/backup mounted..."
mount | grep "/backup"

if [ ! -d /backup/data ]; then
    echo "Creating /backup/data"
    mkdir /backup/data
fi

if [ -e /backup/backup_system ] ; then
    echo "Backup type: system. Press any key to continue."
    read -n 1
    $RSYNC \
          --exclude-from="/home/davs/dotfiles/rsync_ignore"       \
          --exclude="/backup"                                     \
          --exclude="/mnt"                                        \
          / /backup/data
elif [ -e /backup/backup_all ] ; then
    echo "Backup type: all. Press any key to continue."
    read -n 1
    $RSYNC / /backup/data
elif [ -e /backup/backup_home ] ; then
    echo "Backup type: home. Press any key to continue."
    read -n 1
    $RSYNC \
        --include="/home/"         \
        --include="/home/davs/***" \
        --exclude="*"              \
        / /backup/data
elif [ -e /backup/backup_8g ] ; then
    echo "Backup type: 8G. Press any key to continue."
    read -n 1
    $RSYNC --exclude="/mnt" / /backup/data
elif [ -e /backup/backup_32g ] ; then
    echo "Backup type: 32G. Press any key to continue."
    read -n 1
    $RSYNC \
        --exclude="/mnt/data/Music"                       \
        --exclude="/mnt/data/Audio"                       \
        --exclude="/mnt/data/Software"                    \
        --exclude="/mnt/data/Videos"                      \
        --exclude="/mnt/data/School"                      \
        / /backup/data
else
    echo "No backup type detected"
fi

date '+%F %T' > /backup/last_run

echo "rsync has finished..."
sync
echo "sync has finished..."

echo "======================="
echo "`df -h /backup`"
echo "======================="

read -p "Backup done. Press any key to finish"

umount /backup
echo "/backup umounted..."

rmdir /backup
echo "/backup deleted..."

if [ $FSCK -eq 1 ] ; then
    echo "Executing FSCK"
    fsck.ext4 -f /dev/mapper/backup
    sync
    echo "sync has finished..."
fi

$CRYPTSETUP luksClose /dev/mapper/backup
echo "/dev/mapper/backup removed..."

# DEVICE=$(echo "/dev/$1" | sed -e 's/[0-9]$//')
echo "DONE"
