#!/usr/bin/env python

import re
import serial
import os
import time
import sys
from datetime import datetime

layer_change_re = re.compile(r"L:(\d+)")
modifier_change_re = re.compile(r"M:(.)")

def loop():
    ser = serial.Serial(
        port="/dev/ttyACM0",
        baudrate=9600,
    )

    while True:
        now = datetime.now()
        line = ser.readline().decode("ascii").rstrip()
        print(f"{now} Received {line}")

        layer_change_match = layer_change_re.match(line)
        if layer_change_match:
            new_layer = layer_change_match.group(1)
            with open("/tmp/dalsik_layer_change", "w") as f:
                f.write(new_layer)
            os.system("killall -USR1 i3status")

            continue

        modifier_change_match = modifier_change_re.match(line)
        if modifier_change_match:
            modifiers_str = modifier_change_match.group(1)
            modifiers = int(modifiers_str, 16)

            state = [
                check_modifier(modifiers, "SHIFT", 1),
                check_modifier(modifiers, "GUI", 3),
                check_modifier(modifiers, "CTRL", 0),
                check_modifier(modifiers, "ALT", 2),
            ]

            with open("/tmp/dalsik_modifier_change", "w") as f:
                f.write("\n".join(state))
            os.system("killall -USR1 i3status")

            continue

    ser.close()


def check_modifier(modifiers, name, shift):
    if modifiers & (1 << shift) or modifiers & (1 << shift + 4):
        return f"{name} 1"
    return f"{name} 0"


def remove(filePath):
    if os.path.exists(filePath):
        os.remove(filePath)


def run_loop():
    while True:
        try:
            print("Running loop")
            loop()
            print("Exiting loop")
        except Exception as e:
            print(e)

        remove("/tmp/dalsik_layer_change")
        remove("/tmp/dalsik_modifier_change")

        print("Sleeping for 60 seconds")
        time.sleep(60)


if __name__ == "__main__":
    if len(sys.argv) > 1:
        arg = sys.argv[1]
        if arg in ["status", "stop", "start", "restart", "mask", "unmask"]:
            os.system(f"systemctl --user {arg} dalsik_daemon")
    else:
        run_loop()

