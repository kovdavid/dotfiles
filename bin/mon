#!/bin/bash

set -e

[[ $(which nitrogen) ]] && nitrogen --restore 2> /dev/null

xrandr_output=$(xrandr)

DISCONNECTED_DEVICES=$(echo -e "$xrandr_output" | grep -w 'disconnected' | cut -d" " -f 1)
for DEVICE in $DISCONNECTED_DEVICES; do
    echo "Turning off disconnected device $DEVICE"
    $(xrandr --output $DEVICE --off)
done

XRANDR_PRIMARY_OUTPUT=$(echo -e "$xrandr_output" | grep -w 'connected primary')
if [ -z "$XRANDR_PRIMARY_OUTPUT" ] ; then
    echo "No primary output found in xrandr"
    exit 1
fi

PRIMARY_DEVICE=$(echo $XRANDR_PRIMARY_OUTPUT | cut -d" " -f 1)
if [ -z "$PRIMARY_DEVICE" ] ; then
    echo "No primary device found"
    exit 1
fi

PRIMARY_RESOLUTION=$(echo -e "$xrandr_output" | grep -A1 "^$PRIMARY_DEVICE" | tail -n1 | grep -oP '\d+x\d+')
if [ -z "$PRIMARY_RESOLUTION" ] ; then
    echo "No primary resolution found"
    exit 1
fi

echo "Setting primary device $PRIMARY_DEVICE to resolution $PRIMARY_RESOLUTION"
$(xrandr --output $PRIMARY_DEVICE --mode $PRIMARY_RESOLUTION)

XRANDR_SECONDARY_OUTPUT=$(echo -e "$xrandr_output" | grep -w 'connected' | grep -v 'primary' | head -n1)
if [ -z "$XRANDR_SECONDARY_OUTPUT" ] ; then
    echo "No secondary output found in xrandr"
    exit 0
fi

SECONDARY_DEVICE=$(echo $XRANDR_SECONDARY_OUTPUT | cut -d" " -f 1)
if [ -z "$SECONDARY_DEVICE" ] ; then
    echo "No secondary device found"
    exit 1
fi

SECONDARY_RESOLUTION=$(echo -e "$xrandr_output" | grep -A1 "^$SECONDARY_DEVICE" | tail -n1 | grep -oP '\d+x\d+')
if [ -z "$SECONDARY_RESOLUTION" ] ; then
    echo "No secondary resolution found"
    exit 1
fi

WIDTH_PRIMARY=$(echo "$PRIMARY_RESOLUTION" | awk -F 'x' '{print $1}')
HEIGTH_PRIMARY=$(echo "$PRIMARY_RESOLUTION" | awk -F 'x' '{print $2}')
WIDTH_SECONDARY=$(echo "$SECONDARY_RESOLUTION" | awk -F 'x' '{print $1}')
HEIGTH_SECONDARY=$(echo "$SECONDARY_RESOLUTION" | awk -F 'x' '{print $2}')

DELTA_Y=$(($HEIGTH_SECONDARY - $HEIGTH_PRIMARY))

if [ "$1" == "off" ] ; then
    echo "Turning off secondary device $SECONDARY_DEVICE"
    $(xrandr --output $SECONDARY_DEVICE --off)
elif [ "$1" == "dp" ] || [ "$1" == "s" ] || [ "$1" == "sec" ] ; then
    echo "Turning off primary device $PRIMARY_DEVICE"
    $(xrandr --output $PRIMARY_DEVICE --off)
    echo "Setting secondary device $SECONDARY_DEVICE to resolution $SECONDARY_RESOLUTION"
    $(xrandr --output $SECONDARY_DEVICE --mode $SECONDARY_RESOLUTION)
elif [ "$1" == "r" ] || [ "$1" == "right" ] ; then
    echo "Setting secondary device $SECONDARY_DEVICE to resolution $SECONDARY_RESOLUTION right of $PRIMARY_DEVICE with pos ${WIDTH_PRIMARY}x-$DELTA_Y"
    $(xrandr --output $SECONDARY_DEVICE --mode $SECONDARY_RESOLUTION)
    $(xrandr --output $SECONDARY_DEVICE --right-of $PRIMARY_DEVICE)
    $(xrandr --output $SECONDARY_DEVICE --pos ${WIDTH_PRIMARY}x-$DELTA_Y)
elif [ "$1" == "t" ] || [ "$1" == "top" ] ; then
    let "POSX = ($WIDTH_SECONDARY - $WIDTH_PRIMARY) / 2"
    echo "Setting secondary device $SECONDARY_DEVICE to resolution $SECONDARY_RESOLUTION top of $PRIMARY_DEVICE with pos -${POSX}x0"
    $(xrandr --output $SECONDARY_DEVICE --mode $SECONDARY_RESOLUTION)
    $(xrandr --output $SECONDARY_DEVICE --above $PRIMARY_DEVICE)
    $(xrandr --output $SECONDARY_DEVICE --pos -${POSX}x0)
else
    echo "Setting secondary device $SECONDARY_DEVICE to resolution $SECONDARY_RESOLUTION left of $PRIMARY_DEVICE with pos 0x0"
    $(xrandr --output $SECONDARY_DEVICE --mode $SECONDARY_RESOLUTION)
    $(xrandr --output $SECONDARY_DEVICE --left-of $PRIMARY_DEVICE)
    $(xrandr --output $SECONDARY_DEVICE --pos 0x0)
fi

if [ $(which nitrogen) ] ; then
    sleep 2
    nitrogen --restore 2> /dev/null
fi

[ -x ~/bin/keyboard_repeat ] && bash ~/bin/keyboard_repeat
