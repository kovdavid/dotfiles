#!/usr/bin/env perl

use strict;
use warnings;
use JSON qw[ decode_json ];

my $workspaces = decode_json(`i3-msg -tget_workspaces`);

my $direction = shift || 'right';
if ($direction ne 'left' and $direction ne 'right') {
    $direction = 'right';
}

my %workspaces_before;
my %workspaces_after;
my $focused_workspace;

for my $workspace (@{ $workspaces }) {
    my $output = $workspace->{output};
    if ($workspace->{focused}) {
        $focused_workspace = {
            num => $workspace->{num},
            output => $workspace->{output},
        };
    } else {
        if ($focused_workspace) {
            push @{ $workspaces_after{$output} }, $workspace->{num};
        } else {
            push @{ $workspaces_before{$output} }, $workspace->{num};
        }
    }
}

my $workspaces_before_output = $workspaces_before{ $focused_workspace->{output} };
my $workspaces_after_output  = $workspaces_after{ $focused_workspace->{output} };

my $jump_to_workspace;
if ($direction eq 'left') {
    if (@{ $workspaces_before_output || [] }) {
        $jump_to_workspace = $workspaces_before_output->[-1];
    } elsif (@{ $workspaces_after_output || [] }) {
        $jump_to_workspace = $workspaces_after_output->[-1];
    }
} else {
    if (@{ $workspaces_after_output || [] }) {
        $jump_to_workspace = $workspaces_after_output->[0];
    } elsif (@{ $workspaces_before_output || [] }) {
        $jump_to_workspace = $workspaces_before_output->[0];
    }
}

if ($jump_to_workspace) {
    `i3-msg -tcommand 'workspace number $jump_to_workspace'`;
}
